<div class="sign">
	<h1 class="sign__title">{{title}}</h1>
	<form name="signin_form">
		<input type="text" autocomplete="true" name="email">
		<input type="password" autocomplete="true" name="password">
		<button type="submit" class="signin-btn">Войти</button>
	</form>
	<p class="sign__text">Еще не зарегистрировались?</p>
	<p class="sign__text">
		<a href="/auth/signup" class="sign__link" id="tooltip">
			Тогда пройдите не сложную процедуру регистрации
		</a>
	</p> 
	<p class="tooltip">PS, это не долго</p>	
</div>

{{> css/formStyles}}

<script>
/*document.addEventListener("DOMContentLoaded", () => {

	const form = document.forms['signin_form']

	form.addEventListener('submit', async (e) => {
		try {

			e.preventDefault()

			const arr = []

			for (let item of new FormData(form)) { 
				arr.push(item) 
			}

			const data = JSON.stringify(Object.fromEntries(arr)),
			      email = form.elements[0].value,
			      cookieName = 'email',
			      cookie = getCookie(cookieName),
			      redirect = (url) => window.location.href = url
			
			await fetch('/auth/login', {
				method: 'POST',
				body: data,
				headers: {
					'Accept': 'application/json',
					'Content-Type': 'application/json'
				}
			}).then(() => {
				if (cookie) {
					deleteCookie(cookieName)
					setCookie(cookieName, email, {secure: true, 'max-age': 3600})		
				} else {
					setCookie(cookieName, email, {secure: true, 'max-age': 3600})					
				}
			})
			.then(res => redirect('/home'))

		} catch (e) {
			console.warn(e)
		}

	})	

function getCookie(name) {
  let matches = document.cookie.match(new RegExp("(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"))
  return matches ? decodeURIComponent(matches[1]) : undefined
}

function setCookie(name, value, options = {}) {
  options = {
    path: '/', 
  }
  if (options.expires instanceof Date) {
    options.expires = options.expires.toUTCString()
  }
  let updatedCookie = encodeURIComponent(name) + "=" + encodeURIComponent(value)
  for (let key in options) {
    updatedCookie += "; " + key
    if (options[key] !== true) updatedCookie += "=" + options[key] 
  }
  document.cookie = updatedCookie
}

function deleteCookie(name) { 
	setCookie(name, "", { 'max-age': -1 }) 
}

});*/
	
</script>